#!/usr/bin/env bb

(ns script
  (:require [cheshire.core   :as json]
            [clj-yaml.core   :as yaml]
            [clojure.java.io :as io]
            [clojure.string  :as str]))

(defn item->slug
  "An item URL looks like this:
     https://blog.aviflax.com/2020/03/17/be-kind-to.html
   and I want the slug to be
     be-kind-to"
  [item]
  (-> (:url item)
      (str/split #"/")
      (last)
      (str/split #"\.")
      (first)))

(defn item->filename
  "An item URL looks like this:
     https://blog.aviflax.com/2020/03/17/be-kind-to.html
   and I want the filename to be
     be-kind-to.md"
  [item]
  (str (item->slug item) ".md"))

(defn item->front-matter
  [item]
  (-> (select-keys item [:title])
      (assoc :date (:date_published item)
             :slug (item->slug item))
      (yaml/generate-string :dumper-options {:flow-style :block})))

(defn item->file
  [item]
  (str "---\n"
       (item->front-matter item)
       "---\n"
       (:content_html item)))

(defn write-item
  [item out-dir-path]
  (let [filename (item->filename item)
        year (-> item :url (str/split #"/") (nth 3))
        out-file (io/file out-dir-path year filename)]
    (io/make-parents out-file)
    (spit out-file (item->file item))))

(defn main
  [json-file-path out-dir-path]
  (let [feed (json/parse-string (slurp json-file-path) true)]
    (run! #(write-item %1 out-dir-path)
          (:items feed))))

(main "posts3.json"
      "content/posts")
